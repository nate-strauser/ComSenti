'''Externally defined basic sentiments for algorithm operations'''import logging as logimport osfrom google.appengine.api import memcache from models import *def register(SENTIMENTS):    SENTIMENTS['X'] = sentiment_exclude_tokenclass sentiment_exclude_token(object):    modtext = ""        def nud(self):        return 0    def led(self, text, company):        cache_name = 'BUSS_FILTER_'+company        val = memcache.get(cache_name)                if val is None:            #extract dictionary from the database            #and save it in cache            #cache timeout is set to 1 hour            val = FalseTerm.all().filter('company =', company)            memcache.set(cache_name, val, 60*60)            log.info('Load cache %s with businesses to filter out.', cache_name)                     #analyze text to remove         log.debug("Filter out businesses that do not qualify")        try:            for notThis in val:                #look for words that if found in the text will stop the analysis                lookFor = notThis.text.lower()                ltext = text.lower()                if ltext.find(lookFor) > -1:                    log.debug("Wrong company = %s in %s", lookFor, text)                    return 0            #no hits found            return 1                except Exception, e:            log.error("Error in the evaluation ", e)            return 0